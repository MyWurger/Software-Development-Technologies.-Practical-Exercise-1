From b2c2f64b93e151a6be2a51a5eff6d0979a22d4e5 Mon Sep 17 00:00:00 2001
From: MyWurger <wdgwdg9@gmail.com>
Date: Fri, 26 Sep 2025 11:56:15 +0300
Subject: [PATCH 1/3] =?UTF-8?q?SDTPE1:=20=D0=94=D0=BE=D0=B1=D0=B0=D0=B2?=
 =?UTF-8?q?=D0=BB=D0=B5=D0=BD=D1=8B=20=D0=BF=D0=B0=D1=80=D0=B0=D0=BC=D0=B5?=
 =?UTF-8?q?=D1=82=D1=80=D1=8B=20=D0=BA=D0=BE=D0=BC=D0=B0=D0=BD=D0=B4=D0=BD?=
 =?UTF-8?q?=D0=BE=D0=B9=20=D1=81=D1=82=D1=80=D0=BE=D0=BA=D0=B8?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 main.cpp | 82 +++++++++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 67 insertions(+), 15 deletions(-)

diff --git a/main.cpp b/main.cpp
index 16d7f9a..e77fb5b 100644
--- a/main.cpp
+++ b/main.cpp
@@ -19,6 +19,9 @@
  */
 
 #include "sequences.h"
+#include <string>
+#include <ctime>
+#include <cstdlib>
 
 // Функция для демонстрации ступенчатой последовательности
 void demo_stupenchataya()
@@ -100,8 +103,53 @@ void demo_stupenchataya()
 
 int main(int argc, char* argv[])  // Добавляем параметры командной строки
 {
-    // Логирование запуска программы
+    // Простейший парсер аргументов командной строки
+    unsigned int seed = static_cast<unsigned int>(time(nullptr));
+    bool user_seed = false;
+    bool skip_demo = false;
+
+    for (int i = 1; i < argc; ++i) {
+        string arg(argv[i]);
+        if (arg == "--help" || arg == "-h") {
+            cout << "Использование: " << argv[0]
+                 << " [--seed=N | -s N] [--skip-demo] [--help]" << endl
+                 << "  --seed=N, -s N   Установить зерно генератора rand()" << endl
+                 << "  --skip-demo      Пропустить демонстрацию ступенчатой функции" << endl
+                 << "  --help, -h       Показать эту справку и выйти" << endl;
+            return 0;
+        } else if (arg.rfind("--seed=", 0) == 0) {
+            try {
+                seed = static_cast<unsigned int>(stoul(arg.substr(8)));
+                user_seed = true;
+            } catch (...) {
+                cerr << "Некорректное значение для --seed. Ожидается целое число." << endl;
+                return 1;
+            }
+        } else if (arg == "-s") {
+            if (i + 1 < argc) {
+                try {
+                    seed = static_cast<unsigned int>(stoul(argv[++i]));
+                    user_seed = true;
+                } catch (...) {
+                    cerr << "Некорректное значение после -s. Ожидается целое число." << endl;
+                    return 1;
+                }
+            } else {
+                cerr << "Отсутствует значение после -s." << endl;
+                return 1;
+            }
+        } else if (arg == "--skip-demo") {
+            skip_demo = true;
+        } else {
+            cerr << "Неизвестный параметр: " << arg << endl;
+        }
+    }
+
+    // Логирование запуска программы и установка зерна генератора
     cout << "Программа запущена с " << argc << " параметрами" << endl;
+    srand(seed);
+    cout << "Зерно генератора rand(): " << seed
+         << (user_seed ? " (задано пользователем)" : " (по умолчанию)") << endl;
 
     // system("color F0");
     setlocale(LC_ALL, "Rus");                   // Установка русской локали
@@ -114,20 +162,24 @@ int main(int argc, char* argv[])  // Добавляем параметры ко
     double* pznacheniedoub = NULL;              // Указатель на динамический массив чисел с плавающей точкой
     
     // Демонстрация ступенчатой функции с визуализацией
-    cout << "===============================================" << endl;
-    cout << "    ДЕМОНСТРАЦИЯ СТУПЕНЧАТОЙ ФУНКЦИИ         " << endl;
-    cout << "===============================================" << endl;
-    cout << "Ступенчатая функция создает последовательность" << endl;
-    cout << "где значения группируются в 'ступеньки' с" << endl;
-    cout << "постепенно увеличивающейся высотой." << endl;
-    cout << "===============================================" << endl;
-    cout << "Нажмите Enter для демонстрации...";
-    cin.ignore();
-    cin.get();
-    system("clear");
-    
-    // Автоматическая демонстрация ступенчатой функции
-    demo_stupenchataya();
+    if (!skip_demo) {
+        cout << "===============================================" << endl;
+        cout << "    ДЕМОНСТРАЦИЯ СТУПЕНЧАТОЙ ФУНКЦИИ         " << endl;
+        cout << "===============================================" << endl;
+        cout << "Ступенчатая функция создает последовательность" << endl;
+        cout << "где значения группируются в 'ступеньки' с" << endl;
+        cout << "постепенно увеличивающейся высотой." << endl;
+        cout << "===============================================" << endl;
+        cout << "Нажмите Enter для демонстрации...";
+        cin.ignore();
+        cin.get();
+        system("clear");
+
+        // Автоматическая демонстрация ступенчатой функции
+        demo_stupenchataya();
+    } else {
+        cout << "Демонстрация ступенчатой функции пропущена (--skip-demo)." << endl;
+    }
     
     // Работа с различными типами последовательностей включая новую экспоненциальную
     pechat_int_mass(pznachenue, number, rand_max);       // Работа с массивом целых чисел
-- 
2.50.1 (Apple Git-155)

